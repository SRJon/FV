using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using back.data.entities.TGFTPVenda;
using Microsoft.EntityFrameworkCore;

namespace back.data.entities.TGFCABNota
{
    public static class TGFCABRelation
    {
        public static ModelBuilder TGFCABRelationConfiguring(this ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<TGFCAB>().HasOne(c => c.Empresa).WithMany().HasForeignKey(c => c.codemp);
            modelBuilder.Entity<TGFCAB>().HasOne(e => e.TGFTPV).WithMany().HasForeignKey(p => new { p.codtipvenda, p.dhtipvenda });


            #region "Parametrização Entity <> Sankhya"
            modelBuilder.Entity<TGFCAB>().HasKey(u => u.nunota);
            modelBuilder.Entity<TGFCAB>().Property(p => p.nunota).HasColumnName("NUNOTA");
            modelBuilder.Entity<TGFCAB>().Property(p => p.codemp).HasColumnName("CODEMP");
            modelBuilder.Entity<TGFCAB>().Property(p => p.codcencus).HasColumnName("CODCENCUS");
            modelBuilder.Entity<TGFCAB>().Property(p => p.numnota).HasColumnName("NUMNOTA");
            modelBuilder.Entity<TGFCAB>().Property(p => p.serienota).HasColumnName("SERIENOTA");
            modelBuilder.Entity<TGFCAB>().Property(p => p.dtneg).HasColumnName("DTNEG");
            modelBuilder.Entity<TGFCAB>().Property(p => p.dtfatur).HasColumnName("DTFATUR");
            modelBuilder.Entity<TGFCAB>().Property(p => p.dtentsai).HasColumnName("DTENTSAI");
            modelBuilder.Entity<TGFCAB>().Property(p => p.dtval).HasColumnName("DTVAL");
            modelBuilder.Entity<TGFCAB>().Property(p => p.dtmov).HasColumnName("DTMOV");
            modelBuilder.Entity<TGFCAB>().Property(p => p.dtcontab).HasColumnName("DTCONTAB");
            modelBuilder.Entity<TGFCAB>().Property(p => p.hrmov).HasColumnName("HRMOV");
            modelBuilder.Entity<TGFCAB>().Property(p => p.codempnegoc).HasColumnName("CODEMPNEGOC");
            modelBuilder.Entity<TGFCAB>().Property(p => p.codparc).HasColumnName("CODPARC");
            modelBuilder.Entity<TGFCAB>().Property(p => p.codcontato).HasColumnName("CODCONTATO");
            modelBuilder.Entity<TGFCAB>().Property(p => p.rateado).HasColumnName("RATEADO");
            modelBuilder.Entity<TGFCAB>().Property(p => p.codveiculo).HasColumnName("CODVEICULO");
            modelBuilder.Entity<TGFCAB>().Property(p => p.codtipoper).HasColumnName("CODTIPOPER");
            modelBuilder.Entity<TGFCAB>().Property(p => p.dhtipoper).HasColumnName("DHTIPOPER");
            modelBuilder.Entity<TGFCAB>().Property(p => p.tipmov).HasColumnName("TIPMOV");
            modelBuilder.Entity<TGFCAB>().Property(p => p.codtipvenda).HasColumnName("CODTIPVENDA");
            modelBuilder.Entity<TGFCAB>().Property(p => p.dhtipvenda).HasColumnName("DHTIPVENDA");
            modelBuilder.Entity<TGFCAB>().Property(p => p.numcotacao).HasColumnName("NUMCOTACAO");
            modelBuilder.Entity<TGFCAB>().Property(p => p.codvend).HasColumnName("CODVEND");
            modelBuilder.Entity<TGFCAB>().Property(p => p.comissao).HasColumnName("COMISSAO");
            modelBuilder.Entity<TGFCAB>().Property(p => p.codmoeda).HasColumnName("CODMOEDA");
            modelBuilder.Entity<TGFCAB>().Property(p => p.codobspadrao).HasColumnName("CODOBSPADRAO");
            modelBuilder.Entity<TGFCAB>().Property(p => p.observacao).HasColumnName("OBSERVACAO");
            modelBuilder.Entity<TGFCAB>().Property(p => p.vlrseg).HasColumnName("VLRSEG");
            modelBuilder.Entity<TGFCAB>().Property(p => p.vlricmsseg).HasColumnName("VLRICMSSEG");
            modelBuilder.Entity<TGFCAB>().Property(p => p.vlrdestaque).HasColumnName("VLRDESTAQUE");
            modelBuilder.Entity<TGFCAB>().Property(p => p.vlrjuro).HasColumnName("VLRJURO");
            modelBuilder.Entity<TGFCAB>().Property(p => p.vlrvendor).HasColumnName("VLRVENDOR");
            modelBuilder.Entity<TGFCAB>().Property(p => p.vlroutros).HasColumnName("VLROUTROS");
            modelBuilder.Entity<TGFCAB>().Property(p => p.vlremb).HasColumnName("VLREMB");
            modelBuilder.Entity<TGFCAB>().Property(p => p.vlricmsemb).HasColumnName("VLRICMSEMB");
            modelBuilder.Entity<TGFCAB>().Property(p => p.vlrdescserv).HasColumnName("VLRDESCSERV");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ipiemb).HasColumnName("IPIEMB");
            modelBuilder.Entity<TGFCAB>().Property(p => p.tipipiemb).HasColumnName("TIPIPIEMB");
            modelBuilder.Entity<TGFCAB>().Property(p => p.vlrdesctot).HasColumnName("VLRDESCTOT");
            modelBuilder.Entity<TGFCAB>().Property(p => p.vlrdesctotitem).HasColumnName("VLRDESCTOTITEM");
            modelBuilder.Entity<TGFCAB>().Property(p => p.vlrfrete).HasColumnName("VLRFRETE");
            modelBuilder.Entity<TGFCAB>().Property(p => p.icmsfrete).HasColumnName("ICMSFRETE");
            modelBuilder.Entity<TGFCAB>().Property(p => p.baseicmsfrete).HasColumnName("BASEICMSFRETE");
            modelBuilder.Entity<TGFCAB>().Property(p => p.tipfrete).HasColumnName("TIPFRETE");
            modelBuilder.Entity<TGFCAB>().Property(p => p.cif_fob).HasColumnName("CIF_FOB");
            modelBuilder.Entity<TGFCAB>().Property(p => p.vencfrete).HasColumnName("VENCFRETE");
            modelBuilder.Entity<TGFCAB>().Property(p => p.vlrnota).HasColumnName("VLRNOTA");
            modelBuilder.Entity<TGFCAB>().Property(p => p.vencipi).HasColumnName("VENCIPI");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ordemcarga).HasColumnName("ORDEMCARGA");
            modelBuilder.Entity<TGFCAB>().Property(p => p.seqcarga).HasColumnName("SEQCARGA");
            modelBuilder.Entity<TGFCAB>().Property(p => p.kmveiculo).HasColumnName("KMVEICULO");
            modelBuilder.Entity<TGFCAB>().Property(p => p.codparctransp).HasColumnName("CODPARCTRANSP");
            modelBuilder.Entity<TGFCAB>().Property(p => p.qtdvol).HasColumnName("QTDVOL");
            modelBuilder.Entity<TGFCAB>().Property(p => p.pendente).HasColumnName("PENDENTE");
            modelBuilder.Entity<TGFCAB>().Property(p => p.baseicms).HasColumnName("BASEICMS");
            modelBuilder.Entity<TGFCAB>().Property(p => p.vlricms).HasColumnName("VLRICMS");
            modelBuilder.Entity<TGFCAB>().Property(p => p.baseipi).HasColumnName("BASEIPI");
            modelBuilder.Entity<TGFCAB>().Property(p => p.vlripi).HasColumnName("VLRIPI");
            modelBuilder.Entity<TGFCAB>().Property(p => p.issretido).HasColumnName("ISSRETIDO");
            modelBuilder.Entity<TGFCAB>().Property(p => p.baseiss).HasColumnName("BASEISS");
            modelBuilder.Entity<TGFCAB>().Property(p => p.vlriss).HasColumnName("VLRISS");
            modelBuilder.Entity<TGFCAB>().Property(p => p.codusu).HasColumnName("CODUSU");
            modelBuilder.Entity<TGFCAB>().Property(p => p.aprovado).HasColumnName("APROVADO");
            modelBuilder.Entity<TGFCAB>().Property(p => p.vlrirf).HasColumnName("VLRIRF");
            modelBuilder.Entity<TGFCAB>().Property(p => p.irfretido).HasColumnName("IRFRETIDO");
            modelBuilder.Entity<TGFCAB>().Property(p => p.statusnota).HasColumnName("STATUSNOTA");
            modelBuilder.Entity<TGFCAB>().Property(p => p.comger).HasColumnName("COMGER");
            modelBuilder.Entity<TGFCAB>().Property(p => p.dtalter).HasColumnName("DTALTER");
            modelBuilder.Entity<TGFCAB>().Property(p => p.volume).HasColumnName("VOLUME");
            modelBuilder.Entity<TGFCAB>().Property(p => p.codparcdest).HasColumnName("CODPARCDEST");
            modelBuilder.Entity<TGFCAB>().Property(p => p.vlrsubst).HasColumnName("VLRSUBST");
            modelBuilder.Entity<TGFCAB>().Property(p => p.basesubstit).HasColumnName("BASESUBSTIT");
            modelBuilder.Entity<TGFCAB>().Property(p => p.codproj).HasColumnName("CODPROJ");
            modelBuilder.Entity<TGFCAB>().Property(p => p.numcontrato).HasColumnName("NUMCONTRATO");
            modelBuilder.Entity<TGFCAB>().Property(p => p.baseinss).HasColumnName("BASEINSS");
            modelBuilder.Entity<TGFCAB>().Property(p => p.vlrinss).HasColumnName("VLRINSS");
            modelBuilder.Entity<TGFCAB>().Property(p => p.vlrrepredtot).HasColumnName("VLRREPREDTOT");
            modelBuilder.Entity<TGFCAB>().Property(p => p.percdesc).HasColumnName("PERCDESC");
            modelBuilder.Entity<TGFCAB>().Property(p => p.codparcremetente).HasColumnName("CODPARCREMETENTE");
            modelBuilder.Entity<TGFCAB>().Property(p => p.codparcconsignatario).HasColumnName("CODPARCCONSIGNATARIO");
            modelBuilder.Entity<TGFCAB>().Property(p => p.codparcredespacho).HasColumnName("CODPARCREDESPACHO");
            modelBuilder.Entity<TGFCAB>().Property(p => p.localcoleta).HasColumnName("LOCALCOLETA");
            modelBuilder.Entity<TGFCAB>().Property(p => p.localentrega).HasColumnName("LOCALENTREGA");
            modelBuilder.Entity<TGFCAB>().Property(p => p.vlrmercadoria).HasColumnName("VLRMERCADORIA");
            modelBuilder.Entity<TGFCAB>().Property(p => p.peso).HasColumnName("PESO");
            modelBuilder.Entity<TGFCAB>().Property(p => p.notascf).HasColumnName("NOTASCF");
            modelBuilder.Entity<TGFCAB>().Property(p => p.codmoddoc).HasColumnName("CODMODDOC");
            modelBuilder.Entity<TGFCAB>().Property(p => p.codnat).HasColumnName("CODNAT");
            modelBuilder.Entity<TGFCAB>().Property(p => p.codmaq).HasColumnName("CODMAQ");
            modelBuilder.Entity<TGFCAB>().Property(p => p.codfunc).HasColumnName("CODFUNC");
            modelBuilder.Entity<TGFCAB>().Property(p => p.numos).HasColumnName("NUMOS");
            modelBuilder.Entity<TGFCAB>().Property(p => p.numcf).HasColumnName("NUMCF");
            modelBuilder.Entity<TGFCAB>().Property(p => p.vlrfretecpl).HasColumnName("VLRFRETECPL");
            modelBuilder.Entity<TGFCAB>().Property(p => p.troco).HasColumnName("TROCO");
            modelBuilder.Entity<TGFCAB>().Property(p => p.nroredz).HasColumnName("NROREDZ");
            modelBuilder.Entity<TGFCAB>().Property(p => p.vlrmoeda).HasColumnName("VLRMOEDA");
            modelBuilder.Entity<TGFCAB>().Property(p => p.occn48).HasColumnName("OCCN48");
            modelBuilder.Entity<TGFCAB>().Property(p => p.codusuinc).HasColumnName("CODUSUINC");
            modelBuilder.Entity<TGFCAB>().Property(p => p.nutransf).HasColumnName("NUTRANSF");
            modelBuilder.Entity<TGFCAB>().Property(p => p.nurd8).HasColumnName("NURD8");
            modelBuilder.Entity<TGFCAB>().Property(p => p.codsite).HasColumnName("CODSITE");
            modelBuilder.Entity<TGFCAB>().Property(p => p.totalcustoprod).HasColumnName("TOTALCUSTOPROD");
            modelBuilder.Entity<TGFCAB>().Property(p => p.totalcustoserv).HasColumnName("TOTALCUSTOSERV");
            modelBuilder.Entity<TGFCAB>().Property(p => p.codcid).HasColumnName("CODCID");
            modelBuilder.Entity<TGFCAB>().Property(p => p.basesubstsemred).HasColumnName("BASESUBSTSEMRED");
            modelBuilder.Entity<TGFCAB>().Property(p => p.codmotorista).HasColumnName("CODMOTORISTA");
            modelBuilder.Entity<TGFCAB>().Property(p => p.naturezaoperdes).HasColumnName("NATUREZAOPERDES");
            modelBuilder.Entity<TGFCAB>().Property(p => p.serienfdes).HasColumnName("SERIENFDES");
            modelBuilder.Entity<TGFCAB>().Property(p => p.modelonfdes).HasColumnName("MODELONFDES");
            modelBuilder.Entity<TGFCAB>().Property(p => p.codusucomprador).HasColumnName("CODUSUCOMPRADOR");
            modelBuilder.Entity<TGFCAB>().Property(p => p.dtprevent).HasColumnName("DTPREVENT");
            modelBuilder.Entity<TGFCAB>().Property(p => p.nunotapedfret).HasColumnName("NUNOTAPEDFRET");
            modelBuilder.Entity<TGFCAB>().Property(p => p.baseirf).HasColumnName("BASEIRF");
            modelBuilder.Entity<TGFCAB>().Property(p => p.aliqirf).HasColumnName("ALIQIRF");
            modelBuilder.Entity<TGFCAB>().Property(p => p.placa).HasColumnName("PLACA");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ufveiculo).HasColumnName("UFVEICULO");
            modelBuilder.Entity<TGFCAB>().Property(p => p.pesobruto).HasColumnName("PESOBRUTO");
            modelBuilder.Entity<TGFCAB>().Property(p => p.hrentsai).HasColumnName("HRENTSAI");
            modelBuilder.Entity<TGFCAB>().Property(p => p.antt).HasColumnName("ANTT");
            modelBuilder.Entity<TGFCAB>().Property(p => p.lacres).HasColumnName("LACRES");
            modelBuilder.Entity<TGFCAB>().Property(p => p.danfe).HasColumnName("DANFE");
            modelBuilder.Entity<TGFCAB>().Property(p => p.chavenfe).HasColumnName("CHAVENFE");
            modelBuilder.Entity<TGFCAB>().Property(p => p.numeracaovolumes).HasColumnName("NUMERACAOVOLUMES");
            modelBuilder.Entity<TGFCAB>().Property(p => p.dtenviopmb).HasColumnName("DTENVIOPMB");
            modelBuilder.Entity<TGFCAB>().Property(p => p.tipnotapmb).HasColumnName("TIPNOTAPMB");
            modelBuilder.Entity<TGFCAB>().Property(p => p.numaleatorio).HasColumnName("NUMALEATORIO");
            modelBuilder.Entity<TGFCAB>().Property(p => p.numprotoc).HasColumnName("NUMPROTOC");
            modelBuilder.Entity<TGFCAB>().Property(p => p.dhprotoc).HasColumnName("DHPROTOC");
            modelBuilder.Entity<TGFCAB>().Property(p => p.dtenvsuf).HasColumnName("DTENVSUF");
            modelBuilder.Entity<TGFCAB>().Property(p => p.nulotenfe).HasColumnName("NULOTENFE");
            modelBuilder.Entity<TGFCAB>().Property(p => p.statusnfe).HasColumnName("STATUSNFE");
            modelBuilder.Entity<TGFCAB>().Property(p => p.tpemisnfe).HasColumnName("TPEMISNFE");
            modelBuilder.Entity<TGFCAB>().Property(p => p.dtadiam).HasColumnName("DTADIAM");
            modelBuilder.Entity<TGFCAB>().Property(p => p.hradiam).HasColumnName("HRADIAM");
            modelBuilder.Entity<TGFCAB>().Property(p => p.coddoca).HasColumnName("CODDOCA");
            modelBuilder.Entity<TGFCAB>().Property(p => p.digital).HasColumnName("DIGITAL");
            modelBuilder.Entity<TGFCAB>().Property(p => p.totdispdesc).HasColumnName("TOTDISPDESC");
            modelBuilder.Entity<TGFCAB>().Property(p => p.basepis).HasColumnName("BASEPIS");
            modelBuilder.Entity<TGFCAB>().Property(p => p.vlrpis).HasColumnName("VLRPIS");
            modelBuilder.Entity<TGFCAB>().Property(p => p.basepisst).HasColumnName("BASEPISST");
            modelBuilder.Entity<TGFCAB>().Property(p => p.vlrpisst).HasColumnName("VLRPISST");
            modelBuilder.Entity<TGFCAB>().Property(p => p.basecofins).HasColumnName("BASECOFINS");
            modelBuilder.Entity<TGFCAB>().Property(p => p.vlrcofins).HasColumnName("VLRCOFINS");
            modelBuilder.Entity<TGFCAB>().Property(p => p.basecofinsst).HasColumnName("BASECOFINSST");
            modelBuilder.Entity<TGFCAB>().Property(p => p.vlrcofinsst).HasColumnName("VLRCOFINSST");
            modelBuilder.Entity<TGFCAB>().Property(p => p.vlrroyalt).HasColumnName("VLRROYALT");
            modelBuilder.Entity<TGFCAB>().Property(p => p.nrocaixa).HasColumnName("NROCAIXA");
            modelBuilder.Entity<TGFCAB>().Property(p => p.numregdpec).HasColumnName("NUMREGDPEC");
            modelBuilder.Entity<TGFCAB>().Property(p => p.dhregdpec).HasColumnName("DHREGDPEC");
            modelBuilder.Entity<TGFCAB>().Property(p => p.codempfunc).HasColumnName("CODEMPFUNC");
            modelBuilder.Entity<TGFCAB>().Property(p => p.vlrindeniz).HasColumnName("VLRINDENIZ");
            modelBuilder.Entity<TGFCAB>().Property(p => p.marca).HasColumnName("MARCA");
            modelBuilder.Entity<TGFCAB>().Property(p => p.tipoptagjnfe).HasColumnName("TIPOPTAGJNFE");
            modelBuilder.Entity<TGFCAB>().Property(p => p.tpemisnfse).HasColumnName("TPEMISNFSE");
            modelBuilder.Entity<TGFCAB>().Property(p => p.nulotenfse).HasColumnName("NULOTENFSE");
            modelBuilder.Entity<TGFCAB>().Property(p => p.numnfse).HasColumnName("NUMNFSE");
            modelBuilder.Entity<TGFCAB>().Property(p => p.statusnfse).HasColumnName("STATUSNFSE");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ufembarq).HasColumnName("UFEMBARQ");
            modelBuilder.Entity<TGFCAB>().Property(p => p.locembarq).HasColumnName("LOCEMBARQ");
            modelBuilder.Entity<TGFCAB>().Property(p => p.tpligacao).HasColumnName("TPLIGACAO");
            modelBuilder.Entity<TGFCAB>().Property(p => p.codgrupotensao).HasColumnName("CODGRUPOTENSAO");
            modelBuilder.Entity<TGFCAB>().Property(p => p.tpassinante).HasColumnName("TPASSINANTE");
            modelBuilder.Entity<TGFCAB>().Property(p => p.agrupbol).HasColumnName("AGRUPBOL");
            modelBuilder.Entity<TGFCAB>().Property(p => p.nurem).HasColumnName("NUREM");
            modelBuilder.Entity<TGFCAB>().Property(p => p.retdatacritica).HasColumnName("RETDATACRITICA");
            modelBuilder.Entity<TGFCAB>().Property(p => p.qtdbatidas).HasColumnName("QTDBATIDAS");
            modelBuilder.Entity<TGFCAB>().Property(p => p.percpureza).HasColumnName("PERCPUREZA");
            modelBuilder.Entity<TGFCAB>().Property(p => p.percgermin).HasColumnName("PERCGERMIN");
            modelBuilder.Entity<TGFCAB>().Property(p => p.fretevlrbruto).HasColumnName("FRETEVLRBRUTO");
            modelBuilder.Entity<TGFCAB>().Property(p => p.fretevlrdesc).HasColumnName("FRETEVLRDESC");
            modelBuilder.Entity<TGFCAB>().Property(p => p.fretepercdesc).HasColumnName("FRETEPERCDESC");
            modelBuilder.Entity<TGFCAB>().Property(p => p.fretevlrimp).HasColumnName("FRETEVLRIMP");
            modelBuilder.Entity<TGFCAB>().Property(p => p.fretevlrjur).HasColumnName("FRETEVLRJUR");
            modelBuilder.Entity<TGFCAB>().Property(p => p.fretevlrpago).HasColumnName("FRETEVLRPAGO");
            modelBuilder.Entity<TGFCAB>().Property(p => p.codvendtec).HasColumnName("CODVENDTEC");
            modelBuilder.Entity<TGFCAB>().Property(p => p.numpedido).HasColumnName("NUMPEDIDO");
            modelBuilder.Entity<TGFCAB>().Property(p => p.vlrindenizdist).HasColumnName("VLRINDENIZDIST");
            modelBuilder.Entity<TGFCAB>().Property(p => p.codagenda).HasColumnName("CODAGENDA");
            modelBuilder.Entity<TGFCAB>().Property(p => p.dtref).HasColumnName("DTREF");
            modelBuilder.Entity<TGFCAB>().Property(p => p.fretevlrnegoc).HasColumnName("FRETEVLRNEGOC");
            modelBuilder.Entity<TGFCAB>().Property(p => p.codprodpermuta).HasColumnName("CODPRODPERMUTA");
            modelBuilder.Entity<TGFCAB>().Property(p => p.nrogar).HasColumnName("NROGAR");
            modelBuilder.Entity<TGFCAB>().Property(p => p.md5paf).HasColumnName("MD5PAF");
            modelBuilder.Entity<TGFCAB>().Property(p => p.codmoddocnota).HasColumnName("CODMODDOCNOTA");
            modelBuilder.Entity<TGFCAB>().Property(p => p.cpfcnpjadquirente).HasColumnName("CPFCNPJADQUIRENTE");
            modelBuilder.Entity<TGFCAB>().Property(p => p.nomeadquirente).HasColumnName("NOMEADQUIRENTE");
            modelBuilder.Entity<TGFCAB>().Property(p => p.vlrsacadolar).HasColumnName("VLRSACADOLAR");
            modelBuilder.Entity<TGFCAB>().Property(p => p.numpedido2).HasColumnName("NUMPEDIDO2");
            modelBuilder.Entity<TGFCAB>().Property(p => p.numcoo).HasColumnName("NUMCOO");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ordemcargaant).HasColumnName("ORDEMCARGAANT");
            modelBuilder.Entity<TGFCAB>().Property(p => p.tpambnfe).HasColumnName("TPAMBNFE");
            modelBuilder.Entity<TGFCAB>().Property(p => p.przmed).HasColumnName("PRZMED");
            modelBuilder.Entity<TGFCAB>().Property(p => p.codresiduo).HasColumnName("CODRESIDUO");
            modelBuilder.Entity<TGFCAB>().Property(p => p.dtref2).HasColumnName("DTREF2");
            modelBuilder.Entity<TGFCAB>().Property(p => p.vlrliqitemnfe).HasColumnName("VLRLIQITEMNFE");
            modelBuilder.Entity<TGFCAB>().Property(p => p.clascons).HasColumnName("CLASCONS");
            modelBuilder.Entity<TGFCAB>().Property(p => p.numform).HasColumnName("NUMFORM");
            modelBuilder.Entity<TGFCAB>().Property(p => p.dtref3).HasColumnName("DTREF3");
            modelBuilder.Entity<TGFCAB>().Property(p => p.codcc).HasColumnName("CODCC");
            modelBuilder.Entity<TGFCAB>().Property(p => p.produetloc).HasColumnName("PRODUETLOC");
            modelBuilder.Entity<TGFCAB>().Property(p => p.vlrstextranotatot).HasColumnName("VLRSTEXTRANOTATOT");
            modelBuilder.Entity<TGFCAB>().Property(p => p.nutranemp).HasColumnName("NUTRANEMP");
            modelBuilder.Entity<TGFCAB>().Property(p => p.sitespecialresp).HasColumnName("SITESPECIALRESP");
            modelBuilder.Entity<TGFCAB>().Property(p => p.dtentsaiinfo).HasColumnName("DTENTSAIINFO");
            modelBuilder.Entity<TGFCAB>().Property(p => p.exigeissqn).HasColumnName("EXIGEISSQN");
            modelBuilder.Entity<TGFCAB>().Property(p => p.regesptribut).HasColumnName("REGESPTRIBUT");
            modelBuilder.Entity<TGFCAB>().Property(p => p.motnaoreterissqn).HasColumnName("MOTNAORETERISSQN");
            modelBuilder.Entity<TGFCAB>().Property(p => p.dtremret).HasColumnName("DTREMRET");
            modelBuilder.Entity<TGFCAB>().Property(p => p.libconf).HasColumnName("LIBCONF");
            modelBuilder.Entity<TGFCAB>().Property(p => p.nuconfatual).HasColumnName("NUCONFATUAL");
            modelBuilder.Entity<TGFCAB>().Property(p => p.statusxtrategie).HasColumnName("STATUSXTRATEGIE");
            modelBuilder.Entity<TGFCAB>().Property(p => p.codsaf).HasColumnName("CODSAF");
            modelBuilder.Entity<TGFCAB>().Property(p => p.vlrfretecalc).HasColumnName("VLRFRETECALC");
            modelBuilder.Entity<TGFCAB>().Property(p => p.vlrjurodist).HasColumnName("VLRJURODIST");
            modelBuilder.Entity<TGFCAB>().Property(p => p.notaempenho).HasColumnName("NOTAEMPENHO");
            modelBuilder.Entity<TGFCAB>().Property(p => p.codtpd).HasColumnName("CODTPD");
            modelBuilder.Entity<TGFCAB>().Property(p => p.codvtp).HasColumnName("CODVTP");
            modelBuilder.Entity<TGFCAB>().Property(p => p.cancelado).HasColumnName("CANCELADO");
            modelBuilder.Entity<TGFCAB>().Property(p => p.pesobrutomanual).HasColumnName("PESOBRUTOMANUAL");
            modelBuilder.Entity<TGFCAB>().Property(p => p.pesoliquimanual).HasColumnName("PESOLIQUIMANUAL");
            modelBuilder.Entity<TGFCAB>().Property(p => p.nupca).HasColumnName("NUPCA");
            modelBuilder.Entity<TGFCAB>().Property(p => p.indpresnfce).HasColumnName("INDPRESNFCE");
            modelBuilder.Entity<TGFCAB>().Property(p => p.m3).HasColumnName("M3");
            modelBuilder.Entity<TGFCAB>().Property(p => p.vlrtotliqitemmoe).HasColumnName("VLRTOTLIQITEMMOE");
            modelBuilder.Entity<TGFCAB>().Property(p => p.vlrdesctotitemmoe).HasColumnName("VLRDESCTOTITEMMOE");
            modelBuilder.Entity<TGFCAB>().Property(p => p.chavecte).HasColumnName("CHAVECTE");
            modelBuilder.Entity<TGFCAB>().Property(p => p.prodpred).HasColumnName("PRODPRED");
            modelBuilder.Entity<TGFCAB>().Property(p => p.tpemiscte).HasColumnName("TPEMISCTE");
            modelBuilder.Entity<TGFCAB>().Property(p => p.tpambcte).HasColumnName("TPAMBCTE");
            modelBuilder.Entity<TGFCAB>().Property(p => p.lotacao).HasColumnName("LOTACAO");
            modelBuilder.Entity<TGFCAB>().Property(p => p.statuscte).HasColumnName("STATUSCTE");
            modelBuilder.Entity<TGFCAB>().Property(p => p.numaleatoriocte).HasColumnName("NUMALEATORIOCTE");
            modelBuilder.Entity<TGFCAB>().Property(p => p.numprotoccte).HasColumnName("NUMPROTOCCTE");
            modelBuilder.Entity<TGFCAB>().Property(p => p.dhprotoccte).HasColumnName("DHPROTOCCTE");
            modelBuilder.Entity<TGFCAB>().Property(p => p.nulotecte).HasColumnName("NULOTECTE");
            modelBuilder.Entity<TGFCAB>().Property(p => p.dtdeclara).HasColumnName("DTDECLARA");
            modelBuilder.Entity<TGFCAB>().Property(p => p.reboque1).HasColumnName("REBOQUE1");
            modelBuilder.Entity<TGFCAB>().Property(p => p.reboque2).HasColumnName("REBOQUE2");
            modelBuilder.Entity<TGFCAB>().Property(p => p.reboque3).HasColumnName("REBOQUE3");
            modelBuilder.Entity<TGFCAB>().Property(p => p.situacaocte).HasColumnName("SITUACAOCTE");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ctelotacao).HasColumnName("CTELOTACAO");
            modelBuilder.Entity<TGFCAB>().Property(p => p.codveitracao).HasColumnName("CODVEITRACAO");
            modelBuilder.Entity<TGFCAB>().Property(p => p.codobra).HasColumnName("CODOBRA");
            modelBuilder.Entity<TGFCAB>().Property(p => p.codart).HasColumnName("CODART");
            modelBuilder.Entity<TGFCAB>().Property(p => p.idiproc).HasColumnName("IDIPROC");
            modelBuilder.Entity<TGFCAB>().Property(p => p.viatransp).HasColumnName("VIATRANSP");
            modelBuilder.Entity<TGFCAB>().Property(p => p.tipprocimp).HasColumnName("TIPPROCIMP");
            modelBuilder.Entity<TGFCAB>().Property(p => p.cnpjadquirente).HasColumnName("CNPJADQUIRENTE");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ufadquirente).HasColumnName("UFADQUIRENTE");
            modelBuilder.Entity<TGFCAB>().Property(p => p.dhemissepec).HasColumnName("DHEMISSEPEC");
            modelBuilder.Entity<TGFCAB>().Property(p => p.nunotasub).HasColumnName("NUNOTASUB");
            modelBuilder.Entity<TGFCAB>().Property(p => p.chavenfse).HasColumnName("CHAVENFSE");
            modelBuilder.Entity<TGFCAB>().Property(p => p.modentrega).HasColumnName("MODENTREGA");
            modelBuilder.Entity<TGFCAB>().Property(p => p.vlricmsdifaldest).HasColumnName("VLRICMSDIFALDEST");
            modelBuilder.Entity<TGFCAB>().Property(p => p.vlricmsdifalrem).HasColumnName("VLRICMSDIFALREM");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ciot).HasColumnName("CIOT");
            modelBuilder.Entity<TGFCAB>().Property(p => p.vlrfretetotal).HasColumnName("VLRFRETETOTAL");
            modelBuilder.Entity<TGFCAB>().Property(p => p.codparctranspfinal).HasColumnName("CODPARCTRANSPFINAL");
            modelBuilder.Entity<TGFCAB>().Property(p => p.vlricmsfcp).HasColumnName("VLRICMSFCP");
            modelBuilder.Entity<TGFCAB>().Property(p => p.fusoemissepec).HasColumnName("FUSOEMISSEPEC");
            modelBuilder.Entity<TGFCAB>().Property(p => p.vlrdescrat).HasColumnName("VLRDESCRAT");
            modelBuilder.Entity<TGFCAB>().Property(p => p.chavenferef).HasColumnName("CHAVENFEREF");
            modelBuilder.Entity<TGFCAB>().Property(p => p.seqconfirma).HasColumnName("SEQCONFIRMA");
            modelBuilder.Entity<TGFCAB>().Property(p => p.codcontatoentrega).HasColumnName("CODCONTATOENTREGA");
            modelBuilder.Entity<TGFCAB>().Property(p => p.codcidorigem).HasColumnName("CODCIDORIGEM");
            modelBuilder.Entity<TGFCAB>().Property(p => p.codciddestino).HasColumnName("CODCIDDESTINO");
            modelBuilder.Entity<TGFCAB>().Property(p => p.codcidentrega).HasColumnName("CODCIDENTREGA");
            modelBuilder.Entity<TGFCAB>().Property(p => p.coduforigem).HasColumnName("CODUFORIGEM");
            modelBuilder.Entity<TGFCAB>().Property(p => p.codufdestino).HasColumnName("CODUFDESTINO");
            modelBuilder.Entity<TGFCAB>().Property(p => p.codufentrega).HasColumnName("CODUFENTREGA");
            modelBuilder.Entity<TGFCAB>().Property(p => p.classificms).HasColumnName("CLASSIFICMS");
            modelBuilder.Entity<TGFCAB>().Property(p => p.nufop).HasColumnName("NUFOP");
            modelBuilder.Entity<TGFCAB>().Property(p => p.codrastreamentoect).HasColumnName("CODRASTREAMENTOECT");
            modelBuilder.Entity<TGFCAB>().Property(p => p.nuodp).HasColumnName("NUODP");
            modelBuilder.Entity<TGFCAB>().Property(p => p.nupedfrete).HasColumnName("NUPEDFRETE");
            modelBuilder.Entity<TGFCAB>().Property(p => p.codcidprest).HasColumnName("CODCIDPREST");
            modelBuilder.Entity<TGFCAB>().Property(p => p.formpgtcte).HasColumnName("FORMPGTCTE");
            modelBuilder.Entity<TGFCAB>().Property(p => p.percdescfob).HasColumnName("PERCDESCFOB");
            modelBuilder.Entity<TGFCAB>().Property(p => p.tpambnfse).HasColumnName("TPAMBNFSE");
            modelBuilder.Entity<TGFCAB>().Property(p => p.termacordnota).HasColumnName("TERMACORDNOTA");
            modelBuilder.Entity<TGFCAB>().Property(p => p.vlrdescqtd).HasColumnName("VLRDESCQTD");
            modelBuilder.Entity<TGFCAB>().Property(p => p.vlricmsfcpint).HasColumnName("VLRICMSFCPINT");
            modelBuilder.Entity<TGFCAB>().Property(p => p.vlrstfcpint).HasColumnName("VLRSTFCPINT");
            modelBuilder.Entity<TGFCAB>().Property(p => p.vlrstfcpintant).HasColumnName("VLRSTFCPINTANT");
            modelBuilder.Entity<TGFCAB>().Property(p => p.cteglobal).HasColumnName("CTEGLOBAL");
            modelBuilder.Entity<TGFCAB>().Property(p => p.vlrcargaaverb).HasColumnName("VLRCARGAAVERB");
            modelBuilder.Entity<TGFCAB>().Property(p => p.codcidinicte).HasColumnName("CODCIDINICTE");
            modelBuilder.Entity<TGFCAB>().Property(p => p.codcidfimcte).HasColumnName("CODCIDFIMCTE");
            modelBuilder.Entity<TGFCAB>().Property(p => p.nucfr).HasColumnName("NUCFR");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ad_status).HasColumnName("AD_STATUS");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ad_perccom).HasColumnName("AD_PERCCOM");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ad_observacao).HasColumnName("AD_OBSERVACAO");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ad_nurevp).HasColumnName("AD_NUREVP");
            modelBuilder.Entity<TGFCAB>().Property(p => p.vlrprestafrmm).HasColumnName("VLRPRESTAFRMM");
            modelBuilder.Entity<TGFCAB>().Property(p => p.vlrafrmm).HasColumnName("VLRAFRMM");
            modelBuilder.Entity<TGFCAB>().Property(p => p.idnavio).HasColumnName("IDNAVIO");
            modelBuilder.Entity<TGFCAB>().Property(p => p.irinnavio).HasColumnName("IRINNAVIO");
            modelBuilder.Entity<TGFCAB>().Property(p => p.direcaoviag).HasColumnName("DIRECAOVIAG");
            modelBuilder.Entity<TGFCAB>().Property(p => p.idbalsa01).HasColumnName("IDBALSA01");
            modelBuilder.Entity<TGFCAB>().Property(p => p.idbalsa02).HasColumnName("IDBALSA02");
            modelBuilder.Entity<TGFCAB>().Property(p => p.idbalsa03).HasColumnName("IDBALSA03");
            modelBuilder.Entity<TGFCAB>().Property(p => p.nfedevrecusa).HasColumnName("NFEDEVRECUSA");
            modelBuilder.Entity<TGFCAB>().Property(p => p.agrupfinnota).HasColumnName("AGRUPFINNOTA");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ad_nuprog).HasColumnName("AD_NUPROG");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ad_vlracresdec).HasColumnName("AD_VLRACRESDEC");
            modelBuilder.Entity<TGFCAB>().Property(p => p.confirmnotafat).HasColumnName("CONFIRMNOTAFAT");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ad_ligarantes).HasColumnName("AD_LIGARANTES");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ad_pedidoid).HasColumnName("AD_PEDIDOID");
            modelBuilder.Entity<TGFCAB>().Property(p => p.permaltercentral).HasColumnName("PERMALTERCENTRAL");
            modelBuilder.Entity<TGFCAB>().Property(p => p.codguf).HasColumnName("CODGUF");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ad_nunota).HasColumnName("AD_NUNOTA");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ad_redp).HasColumnName("AD_REDP");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ad_redp_razao).HasColumnName("AD_REDP_RAZAO");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ad_redp_cnpj).HasColumnName("AD_REDP_CNPJ");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ad_redp_tel).HasColumnName("AD_REDP_TEL");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ad_vlrfretecalc).HasColumnName("AD_VLRFRETECALC");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ad_nunotaconf).HasColumnName("AD_NUNOTACONF");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ad_classepedido).HasColumnName("AD_CLASSEPEDIDO");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ad_vlrfretetotal).HasColumnName("AD_VLRFRETETOTAL");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ad_vlrseg2).HasColumnName("AD_VLRSEG2");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ad_vlrfretepf).HasColumnName("AD_VLRFRETEPF");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ad_comprador).HasColumnName("AD_COMPRADOR");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ad_nusoldev).HasColumnName("AD_NUSOLDEV");
            modelBuilder.Entity<TGFCAB>().Property(p => p.esu_bkp_pendente).HasColumnName("ESU_BKP_PENDENTE");
            modelBuilder.Entity<TGFCAB>().Property(p => p.esu_bkp_pendente_dois).HasColumnName("ESU_BKP_PENDENTE_DOIS");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ad_dt_confirmacao).HasColumnName("AD_DT_CONFIRMACAO");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ad_calccommanual).HasColumnName("AD_CALCCOMMANUAL");
            modelBuilder.Entity<TGFCAB>().Property(p => p.vlrrepredtotsemdesc).HasColumnName("VLRREPREDTOTSEMDESC");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ad_temremessa).HasColumnName("AD_TEMREMESSA");
            modelBuilder.Entity<TGFCAB>().Property(p => p.finalizadofox).HasColumnName("FINALIZADOFOX");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ad_novocliente_cnpj).HasColumnName("AD_NOVOCLIENTE_CNPJ");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ad_numped_mercos).HasColumnName("AD_NUMPED_MERCOS");
            modelBuilder.Entity<TGFCAB>().Property(p => p.numcupomeconect).HasColumnName("NUMCUPOMECONECT");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ad_pedidoidfotus).HasColumnName("AD_PEDIDOIDFOTUS");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ad_integrador).HasColumnName("AD_INTEGRADOR");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ad_promvendas).HasColumnName("AD_PROMVENDAS");
            modelBuilder.Entity<TGFCAB>().Property(p => p.dtextempk280).HasColumnName("DTEXTEMPK280");
            modelBuilder.Entity<TGFCAB>().Property(p => p.timnufinorig).HasColumnName("TIMNUFINORIG");
            modelBuilder.Entity<TGFCAB>().Property(p => p.timcontratovenda).HasColumnName("TIMCONTRATOVENDA");
            modelBuilder.Entity<TGFCAB>().Property(p => p.timorigem).HasColumnName("TIMORIGEM");
            modelBuilder.Entity<TGFCAB>().Property(p => p.timcontratoltv).HasColumnName("TIMCONTRATOLTV");
            modelBuilder.Entity<TGFCAB>().Property(p => p.timnunotamod).HasColumnName("TIMNUNOTAMOD");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ad_nunota_ld).HasColumnName("AD_NUNOTA_LD");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ad_nova_conf).HasColumnName("AD_NOVA_CONF");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ad_dt_nova_conf).HasColumnName("AD_DT_NOVA_CONF");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ad_freteint).HasColumnName("AD_FRETEINT");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ad_perccomcompra).HasColumnName("AD_PERCCOMCOMPRA");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ad_taxaexport).HasColumnName("AD_TAXAEXPORT");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ad_nrocrm).HasColumnName("AD_NROCRM");
            modelBuilder.Entity<TGFCAB>().Property(p => p.latitude).HasColumnName("LATITUDE");
            modelBuilder.Entity<TGFCAB>().Property(p => p.longitude).HasColumnName("LONGITUDE");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ad_totnotayuan).HasColumnName("AD_TOTNOTAYUAN");
            modelBuilder.Entity<TGFCAB>().Property(p => p.codparcdescargamdfe).HasColumnName("CODPARCDESCARGAMDFE");
            modelBuilder.Entity<TGFCAB>().Property(p => p.coddocarrecad).HasColumnName("CODDOCARRECAD");
            modelBuilder.Entity<TGFCAB>().Property(p => p.numdocarrecad).HasColumnName("NUMDOCARRECAD");
            modelBuilder.Entity<TGFCAB>().Property(p => p.premiacaoestadual).HasColumnName("PREMIACAOESTADUAL");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ad_pedidoidfotusorig).HasColumnName("AD_PEDIDOIDFOTUSORIG");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ad_codparcred).HasColumnName("AD_CODPARCRED");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ad_codparc).HasColumnName("AD_CODPARC");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ad_obsnfered).HasColumnName("AD_OBSNFERED");
            modelBuilder.Entity<TGFCAB>().Property(p => p.nfseid).HasColumnName("NFSEID");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ad_vendadireta).HasColumnName("AD_VENDADIRETA");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ad_cotar_frete).HasColumnName("AD_COTAR_FRETE");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ad_dhenvcotfrete).HasColumnName("AD_DHENVCOTFRETE");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ad_codsacf).HasColumnName("AD_CODSACF");
            modelBuilder.Entity<TGFCAB>().Property(p => p.codparcdepo).HasColumnName("CODPARCDEPO");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ad_embalagem).HasColumnName("AD_EMBALAGEM");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ad_temadiantamento).HasColumnName("AD_TEMADIANTAMENTO");
            modelBuilder.Entity<TGFCAB>().Property(p => p.codcheckout).HasColumnName("CODCHECKOUT");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ad_codinv).HasColumnName("AD_CODINV");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ad_codsinist).HasColumnName("AD_CODSINIST");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ad_potencia_ger).HasColumnName("AD_POTENCIA_GER");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ad_database).HasColumnName("AD_DATABASE");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ad_pvfnrofotusorig).HasColumnName("AD_PVFNROFOTUSORIG");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ad_pvfnrofotusseq).HasColumnName("AD_PVFNROFOTUSSEQ");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ad_pvfmotivodupl).HasColumnName("AD_PVFMOTIVODUPL");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ad_pvfnovoproc).HasColumnName("AD_PVFNOVOPROC");
            modelBuilder.Entity<TGFCAB>().Property(p => p.vlrfethab).HasColumnName("VLRFETHAB");
            modelBuilder.Entity<TGFCAB>().Property(p => p.baseicmsat).HasColumnName("BASEICMSAT");
            modelBuilder.Entity<TGFCAB>().Property(p => p.vlricmsat).HasColumnName("VLRICMSAT");
            modelBuilder.Entity<TGFCAB>().Property(p => p.valordesonpiscofins).HasColumnName("VALORDESONPISCOFINS");
            modelBuilder.Entity<TGFCAB>().Property(p => p.disdesautimpemb).HasColumnName("DISDESAUTIMPEMB");
            modelBuilder.Entity<TGFCAB>().Property(p => p.nunotaorigcorte).HasColumnName("NUNOTAORIGCORTE");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ad_ordemcompra).HasColumnName("AD_ORDEMCOMPRA");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ad_dtfat).HasColumnName("AD_DTFAT");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ad_temordemcomp).HasColumnName("AD_TEMORDEMCOMP");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ad_temdtfat).HasColumnName("AD_TEMDTFAT");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ad_boldiasvenc).HasColumnName("AD_BOLDIASVENC");
            modelBuilder.Entity<TGFCAB>().Property(p => p.ad_dtcartao).HasColumnName("AD_DTCARTAO");
            modelBuilder.Entity<TGFCAB>().Property(p => p.codinterm).HasColumnName("CODINTERM");
            modelBuilder.Entity<TGFCAB>().Property(p => p.intermed).HasColumnName("INTERMED");
            modelBuilder.Entity<TGFCAB>().Property(p => p.vlrrepredst).HasColumnName("VLRREPREDST");
            modelBuilder.Entity<TGFCAB>().Property(p => p.baseicmsstfrete).HasColumnName("BASEICMSSTFRETE");
            modelBuilder.Entity<TGFCAB>().Property(p => p.icmsstfrete).HasColumnName("ICMSSTFRETE");
            modelBuilder.Entity<TGFCAB>().Property(p => p.iddescparceria).HasColumnName("IDDESCPARCERIA");
            modelBuilder.Entity<TGFCAB>().Property(p => p.vlrdescparceria).HasColumnName("VLRDESCPARCERIA");
            modelBuilder.Entity<TGFCAB>().Property(p => p.clienteidparceria).HasColumnName("CLIENTEIDPARCERIA");
            modelBuilder.Entity<TGFCAB>().Property(p => p.idpontuacaoparceria).HasColumnName("IDPONTUACAOPARCERIA");
            modelBuilder.Entity<TGFCAB>().Property(p => p.fistel).HasColumnName("FISTEL");
            modelBuilder.Entity<TGFCAB>().Property(p => p.numcstc).HasColumnName("NUMCSTC");
            modelBuilder.Entity<TGFCAB>().Property(p => p.qtdusu).HasColumnName("QTDUSU");
            modelBuilder.Entity<TGFCAB>().Property(p => p.numtermtel).HasColumnName("NUMTERMTEL");
            modelBuilder.Entity<TGFCAB>().Property(p => p.tipclienteservcom).HasColumnName("TIPCLIENTESERVCOM");
            modelBuilder.Entity<TGFCAB>().Property(p => p.md5modcomtel).HasColumnName("MD5MODCOMTEL");
            modelBuilder.Entity<TGFCAB>().Property(p => p.indnegmodal).HasColumnName("INDNEGMODAL");
            modelBuilder.Entity<TGFCAB>().Property(p => p.codparcretirada).HasColumnName("CODPARCRETIRADA");
            #endregion

            return modelBuilder;
        }
    }
}