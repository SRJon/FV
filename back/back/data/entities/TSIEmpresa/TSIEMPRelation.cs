using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.EntityFrameworkCore;

namespace back.data.entities.TSIEmpresa
{
    public static class TSIEMPRelation
    {
        public static ModelBuilder TSIEMPRelationConfiguring(this ModelBuilder modelBuilder)
        {

            modelBuilder.Entity<TSIEMP>().HasKey(u => u.codemp);
            modelBuilder.Entity<TSIEMP>().Property(p => p.codemp).HasColumnName("CODEMP");
            modelBuilder.Entity<TSIEMP>().Property(p => p.nomefantasia).HasColumnName("NOMEFANTASIA");
            modelBuilder.Entity<TSIEMP>().Property(p => p.razaosocial).HasColumnName("RAZAOSOCIAL");
            modelBuilder.Entity<TSIEMP>().Property(p => p.razaoabrev).HasColumnName("RAZAOABREV");
            modelBuilder.Entity<TSIEMP>().Property(p => p.codempmatriz).HasColumnName("CODEMPMATRIZ");
            modelBuilder.Entity<TSIEMP>().Property(p => p.codend).HasColumnName("CODEND");
            modelBuilder.Entity<TSIEMP>().Property(p => p.numend).HasColumnName("NUMEND");
            modelBuilder.Entity<TSIEMP>().Property(p => p.complemento).HasColumnName("COMPLEMENTO");
            modelBuilder.Entity<TSIEMP>().Property(p => p.codbai).HasColumnName("CODBAI");
            modelBuilder.Entity<TSIEMP>().Property(p => p.codcid).HasColumnName("CODCID");
            modelBuilder.Entity<TSIEMP>().Property(p => p.cep).HasColumnName("CEP");
            modelBuilder.Entity<TSIEMP>().Property(p => p.telefone).HasColumnName("TELEFONE");
            modelBuilder.Entity<TSIEMP>().Property(p => p.fax).HasColumnName("FAX");
            modelBuilder.Entity<TSIEMP>().Property(p => p.telex).HasColumnName("TELEX");
            modelBuilder.Entity<TSIEMP>().Property(p => p.email).HasColumnName("EMAIL");
            modelBuilder.Entity<TSIEMP>().Property(p => p.homepage).HasColumnName("HOMEPAGE");
            modelBuilder.Entity<TSIEMP>().Property(p => p.numpropr).HasColumnName("NUMPROPR");
            modelBuilder.Entity<TSIEMP>().Property(p => p.princtitular).HasColumnName("PRINCTITULAR");
            modelBuilder.Entity<TSIEMP>().Property(p => p.cgc).HasColumnName("CGC");
            modelBuilder.Entity<TSIEMP>().Property(p => p.inscestad).HasColumnName("INSCESTAD");
            modelBuilder.Entity<TSIEMP>().Property(p => p.inscmun).HasColumnName("INSCMUN");
            modelBuilder.Entity<TSIEMP>().Property(p => p.codmun).HasColumnName("CODMUN");
            modelBuilder.Entity<TSIEMP>().Property(p => p.natestab).HasColumnName("NATESTAB");
            modelBuilder.Entity<TSIEMP>().Property(p => p.natjur).HasColumnName("NATJUR");
            modelBuilder.Entity<TSIEMP>().Property(p => p.ramoativ).HasColumnName("RAMOATIV");
            modelBuilder.Entity<TSIEMP>().Property(p => p.ativecon).HasColumnName("ATIVECON");
            modelBuilder.Entity<TSIEMP>().Property(p => p.regjuntacom).HasColumnName("REGJUNTACOM");
            modelBuilder.Entity<TSIEMP>().Property(p => p.dtregjunta).HasColumnName("DTREGJUNTA");
            modelBuilder.Entity<TSIEMP>().Property(p => p.logomarca).HasColumnName("LOGOMARCA");
            modelBuilder.Entity<TSIEMP>().Property(p => p.financeiro).HasColumnName("FINANCEIRO");
            modelBuilder.Entity<TSIEMP>().Property(p => p.estoque).HasColumnName("ESTOQUE");
            modelBuilder.Entity<TSIEMP>().Property(p => p.cargas).HasColumnName("CARGAS");
            modelBuilder.Entity<TSIEMP>().Property(p => p.comissoes).HasColumnName("COMISSOES");
            modelBuilder.Entity<TSIEMP>().Property(p => p.producao).HasColumnName("PRODUCAO");
            modelBuilder.Entity<TSIEMP>().Property(p => p.supdecisao).HasColumnName("SUPDECISAO");
            modelBuilder.Entity<TSIEMP>().Property(p => p.livrosfiscais).HasColumnName("LIVROSFISCAIS");
            modelBuilder.Entity<TSIEMP>().Property(p => p.contabilidade).HasColumnName("CONTABILIDADE");
            modelBuilder.Entity<TSIEMP>().Property(p => p.folhapagto).HasColumnName("FOLHAPAGTO");
            modelBuilder.Entity<TSIEMP>().Property(p => p.codcnl).HasColumnName("CODCNL");
            modelBuilder.Entity<TSIEMP>().Property(p => p.simples).HasColumnName("SIMPLES");
            modelBuilder.Entity<TSIEMP>().Property(p => p.codparc).HasColumnName("CODPARC");
            modelBuilder.Entity<TSIEMP>().Property(p => p.limcurva_b).HasColumnName("LIMCURVA_B");
            modelBuilder.Entity<TSIEMP>().Property(p => p.limcurva_c).HasColumnName("LIMCURVA_C");
            modelBuilder.Entity<TSIEMP>().Property(p => p.empagrupargol).HasColumnName("EMPAGRUPARGOL");
            modelBuilder.Entity<TSIEMP>().Property(p => p.serienfdes).HasColumnName("SERIENFDES");
            modelBuilder.Entity<TSIEMP>().Property(p => p.modelonfdes).HasColumnName("MODELONFDES");
            modelBuilder.Entity<TSIEMP>().Property(p => p.cooperativa).HasColumnName("COOPERATIVA");
            modelBuilder.Entity<TSIEMP>().Property(p => p.dtconvsoc).HasColumnName("DTCONVSOC");
            modelBuilder.Entity<TSIEMP>().Property(p => p.dupliv).HasColumnName("DUPLIV");
            modelBuilder.Entity<TSIEMP>().Property(p => p.cpfresp).HasColumnName("CPFRESP");
            modelBuilder.Entity<TSIEMP>().Property(p => p.codregtrib).HasColumnName("CODREGTRIB");
            modelBuilder.Entity<TSIEMP>().Property(p => p.tiposn).HasColumnName("TIPOSN");
            modelBuilder.Entity<TSIEMP>().Property(p => p.codparcdiv).HasColumnName("CODPARCDIV");
            modelBuilder.Entity<TSIEMP>().Property(p => p.md5paf).HasColumnName("MD5PAF");
            modelBuilder.Entity<TSIEMP>().Property(p => p.razaosocialcompleta).HasColumnName("RAZAOSOCIALCOMPLETA");
            modelBuilder.Entity<TSIEMP>().Property(p => p.latitude).HasColumnName("LATITUDE");
            modelBuilder.Entity<TSIEMP>().Property(p => p.longitude).HasColumnName("LONGITUDE");
            modelBuilder.Entity<TSIEMP>().Property(p => p.simplesnacnauf).HasColumnName("SIMPLESNACNAUF");
            modelBuilder.Entity<TSIEMP>().Property(p => p.dmacodinsp).HasColumnName("DMACODINSP");
            modelBuilder.Entity<TSIEMP>().Property(p => p.dmaespecial).HasColumnName("DMAESPECIAL");
            modelBuilder.Entity<TSIEMP>().Property(p => p.dtencerbalan).HasColumnName("DTENCERBALAN");
            modelBuilder.Entity<TSIEMP>().Property(p => p.servidorsmtp).HasColumnName("SERVIDORSMTP");
            modelBuilder.Entity<TSIEMP>().Property(p => p.tiposmtp).HasColumnName("TIPOSMTP");
            modelBuilder.Entity<TSIEMP>().Property(p => p.usuariosmtp).HasColumnName("USUARIOSMTP");
            modelBuilder.Entity<TSIEMP>().Property(p => p.senhasmtp).HasColumnName("SENHASMTP");
            modelBuilder.Entity<TSIEMP>().Property(p => p.portasmtp).HasColumnName("PORTASMTP");
            modelBuilder.Entity<TSIEMP>().Property(p => p.segurancasmtp).HasColumnName("SEGURANCASMTP");
            modelBuilder.Entity<TSIEMP>().Property(p => p.codqualassin).HasColumnName("CODQUALASSIN");
            modelBuilder.Entity<TSIEMP>().Property(p => p.codparcresp).HasColumnName("CODPARCRESP");
            modelBuilder.Entity<TSIEMP>().Property(p => p.sitespecialresp).HasColumnName("SITESPECIALRESP");
            modelBuilder.Entity<TSIEMP>().Property(p => p.exigeissqn).HasColumnName("EXIGEISSQN");
            modelBuilder.Entity<TSIEMP>().Property(p => p.regesptribut).HasColumnName("REGESPTRIBUT");
            modelBuilder.Entity<TSIEMP>().Property(p => p.rntrc).HasColumnName("RNTRC");
            modelBuilder.Entity<TSIEMP>().Property(p => p.classtrib).HasColumnName("CLASSTRIB");
            modelBuilder.Entity<TSIEMP>().Property(p => p.cnaeprepon).HasColumnName("CNAEPREPON");
            modelBuilder.Entity<TSIEMP>().Property(p => p.indcoop).HasColumnName("INDCOOP");
            modelBuilder.Entity<TSIEMP>().Property(p => p.indconstr).HasColumnName("INDCONSTR");
            modelBuilder.Entity<TSIEMP>().Property(p => p.infoobra).HasColumnName("INFOOBRA");
            modelBuilder.Entity<TSIEMP>().Property(p => p.codusu).HasColumnName("CODUSU");
            modelBuilder.Entity<TSIEMP>().Property(p => p.dhalter).HasColumnName("DHALTER");
            modelBuilder.Entity<TSIEMP>().Property(p => p.acdintisenmulta).HasColumnName("ACDINTISENMULTA");
            modelBuilder.Entity<TSIEMP>().Property(p => p.codparcempsoft).HasColumnName("CODPARCEMPSOFT");
            modelBuilder.Entity<TSIEMP>().Property(p => p.codcttparcempsoft).HasColumnName("CODCTTPARCEMPSOFT");
            modelBuilder.Entity<TSIEMP>().Property(p => p.indsitesp).HasColumnName("INDSITESP");
            modelBuilder.Entity<TSIEMP>().Property(p => p.corempresa).HasColumnName("COREMPRESA");
            modelBuilder.Entity<TSIEMP>().Property(p => p.qtdacessos).HasColumnName("QTDACESSOS");
            modelBuilder.Entity<TSIEMP>().Property(p => p.envesocial).HasColumnName("ENVESOCIAL");
            modelBuilder.Entity<TSIEMP>().Property(p => p.reciboesocial).HasColumnName("RECIBOESOCIAL");
            modelBuilder.Entity<TSIEMP>().Property(p => p.inivalesocial).HasColumnName("INIVALESOCIAL");
            modelBuilder.Entity<TSIEMP>().Property(p => p.fimvalesocial).HasColumnName("FIMVALESOCIAL");
            modelBuilder.Entity<TSIEMP>().Property(p => p.ad_parccr).HasColumnName("AD_PARCCR");
            modelBuilder.Entity<TSIEMP>().Property(p => p.ad_tributa).HasColumnName("AD_TRIBUTA");
            modelBuilder.Entity<TSIEMP>().Property(p => p.ad_qualifi).HasColumnName("AD_QUALIFI");
            modelBuilder.Entity<TSIEMP>().Property(p => p.ad_crivarm).HasColumnName("AD_CRIVARM");
            modelBuilder.Entity<TSIEMP>().Property(p => p.ad_regpis).HasColumnName("AD_REGPIS");
            modelBuilder.Entity<TSIEMP>().Property(p => p.ad_imagem).HasColumnName("AD_IMAGEM");
            modelBuilder.Entity<TSIEMP>().Property(p => p.indopccp).HasColumnName("INDOPCCP");
            modelBuilder.Entity<TSIEMP>().Property(p => p.ad_ignoraaglutinacao).HasColumnName("AD_IGNORAAGLUTINACAO");
            modelBuilder.Entity<TSIEMP>().Property(p => p.ad_modevp).HasColumnName("AD_MODEVP");
            modelBuilder.Entity<TSIEMP>().Property(p => p.ad_nurbvp).HasColumnName("AD_NURBVP");
            modelBuilder.Entity<TSIEMP>().Property(p => p.ad_toppedreal).HasColumnName("AD_TOPPEDREAL");
            modelBuilder.Entity<TSIEMP>().Property(p => p.ad_toppedvirt).HasColumnName("AD_TOPPEDVIRT");
            modelBuilder.Entity<TSIEMP>().Property(p => p.ad_topentvirt).HasColumnName("AD_TOPENTVIRT");
            modelBuilder.Entity<TSIEMP>().Property(p => p.ad_topentreal).HasColumnName("AD_TOPENTREAL");
            modelBuilder.Entity<TSIEMP>().Property(p => p.ad_conferencia).HasColumnName("AD_CONFERENCIA");
            modelBuilder.Entity<TSIEMP>().Property(p => p.ad_topdespadt).HasColumnName("AD_TOPDESPADT");
            modelBuilder.Entity<TSIEMP>().Property(p => p.nuversao).HasColumnName("NUVERSAO");
            modelBuilder.Entity<TSIEMP>().Property(p => p.usarazaosocial).HasColumnName("USARAZAOSOCIAL");
            modelBuilder.Entity<TSIEMP>().Property(p => p.dtabertura).HasColumnName("DTABERTURA");
            modelBuilder.Entity<TSIEMP>().Property(p => p.empidenotas).HasColumnName("EMPIDENOTAS");
            modelBuilder.Entity<TSIEMP>().Property(p => p.produtorrural).HasColumnName("PRODUTORRURAL");
            modelBuilder.Entity<TSIEMP>().Property(p => p.cotm).HasColumnName("COTM");

            return modelBuilder;
        }
    }
}